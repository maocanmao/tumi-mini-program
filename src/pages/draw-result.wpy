<style lang="less">
page {
  background: #051516;
}
.container {
  background: #051516;
  width: 750rpx;
  height: 0;
  overflow: hidden;
}
.container1 {
  background: #051516;
  width: 750rpx;
  height: 100%;
}
.confirm-btn-container {
  display: flex;
  align-items: center;
  justify-content: space-around;
  position: fixed;
  bottom: 0%;
  width: 100%;
  height: 12%;
  background-color: #051516;
}
.confirm-btn {
  width: 100rpx;
  height: 100rpx;
  margin-top: 50rpx;
  margin-bottom: 50rpx;
}
.share-btn {
  width: 100rpx;
  height: 100rpx;
  border-radius: 50%;
  margin-left: 0;
  margin-right: 0;
  background-size: 100rpx 100rpx;
  background-repeat: no-repeat;
  border: none;
}
.image {
  width: 750rpx;
  height: 1000rpx;
  // margin-top: 40rpx;
}
</style>

<template>
  <view>
    <wxc-cc class="container1">
      <canvas canvasId="maskCanvas" class="image"></canvas>
    </wxc-cc>
    <!-- <wxc-cc class="container1">
      <image class="image" src="{{imageUrl}}"/>
    </wxc-cc> -->
    <view class="confirm-btn-container">
      <image class="confirm-btn" src="images/back.png" @tap="back()" />
      <image class="share-btn" src="images/check.png" @tap="saveImg()" />
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
export default class DrawResult extends wepy.page {
  config = {
    navigationBarTitleText: '',
    disableScroll: true,
    usingComponents: {
      'wxc-cc': '../../packages/@minui/wxc-cc/dist/index'
    }
  };
  data = {
    imageUrl: null,
    sysData: null,
    items: []
  };
  methods = {
    back() {
      wepy.navigateBack({
        delta: 1 //返回的页面数，如果 delta 大于现有页面数，则返回到首页,
      });
    }
  };
  onLoad(option) {}
  onShow() {
    this.sysData = wx.getSystemInfoSync();
    // this.imageUrl = option.imgUrl;
    this.items = this.$parent.globalData.drawItems;
    this.save();
  }
  toNext() {}
  save() {
    wepy.showLoading({
      title: '请等待', //提示的内容,
      mask: true, //显示透明蒙层，防止触摸穿透,
      success: res => {}
    });

    console.log('this.sysData: ', this.sysData);
    // this.canvasHeight = 0.85 * this.sysData.windowHeight;
    var s = wx.createCanvasContext('maskCanvas');
    //下面两个参数决定图片的位置
    var e = this.sysData.windowWidth * 0.8;
    var a = 0.77 * e / (0.75 * this.sysData.windowWidth);
    // console.log('a: ', a);
    // var c = 1.77;
    s.drawImage(
      this.$parent.globalData.currentBackground,
      0,
      0,
      this.rpx(750),
      this.rpx(950)
    );

    for (var r = 0; r < this.items.length; r++) {
      s.save();
      s.translate(e * (1 - 0.77) / 2, 10);
      s.beginPath();
      s.translate(this.items[r].x * a, this.items[r].y * a);
      s.rotate(this.items[r].angle * Math.PI / 180);
      s.translate(
        -this.items[r].width * this.items[r].scale * a / 2,
        -this.items[r].height * this.items[r].scale * a / 2
      );
      s.drawImage(
        this.items[r].image,
        0,
        0,
        this.items[r].width * this.items[r].scale * a,
        this.items[r].height * this.items[r].scale * a
      );
      s.restore();
      // s.setFillStyle('#d7be71');
      // s.setFontSize(13);
      // s.fillText(
      //   this.$parent.globalData.userInfo.nickName +
      //     '的个人图腾创作 NO.' +
      //     this.$parent.globalData.userImagesCount,
      //   this.rpx(80),
      //   this.rpx(890)
      // );

      s.setFillStyle('#d7be71');
      s.setFontSize(8);
      s.fillText(
        this.$parent.globalData.userInfo.nickName +
          '的个人图腾创作 NO.' +
          this.$parent.globalData.userImagesCount +
          '   图靡小程序出品',
        this.rpx(100),
        this.rpx(930)
      );
    }
    var that = this;
    s.draw(true, function(t) {
      setTimeout(function() {
        wx.canvasToTempFilePath({
          canvasId: 'maskCanvas',
          width: that.rpx(800),
          height: that.rpx(1000),
          destWidth: that.rpx(3200),
          destHeight: that.rpx(4000),
          success: function(t) {
            that.imageUrl = t.tempFilePath;
            console.log(that.imageUrl);
            wepy.hideLoading();
          }
        });
      }, 2000);
    });
  }
  saveImg() {
    wepy
      .saveImageToPhotosAlbum({
        filePath: this.imageUrl
      })
      .then(success => {
        console.log('success: ', success);
        var that = this;
        wx.showModal({
          content: '图片已保存到相册',
          showCancel: false,
          success: function(res) {
            if (res.confirm) {
              that.uploadImage();
            }
          }
        });
      })
      .catch(error => console.log(error));
  }

  uploadImage() {
    wepy.showLoading({
      title: '保存中', //提示的内容,
      mask: true, //显示透明蒙层，防止触摸穿透,
      success: res => {}
    });

    this.$parent.getToken().then(token => {
      wepy
        .uploadFile({
          url: this.$parent.config.baseUrl + 'user/answers?token=' + token,
          filePath: this.imageUrl,
          name: 'image',
          formData: this.getRequestData()
        })
        .then(res => {
          wepy.hideLoading();
          console.log('checkin with image successfully.' + JSON.stringify(res));
          wepy.navigateTo({ url: 'user-wroks' });
        })
        .catch(error => {
          wepy.hideLoading();
          wepy.showToast({
            title: '发生错误，上传图片失败 ', //提示的内容,
            icon: 'none', //图标,
            duration: 4000, //延迟时间,
            mask: false, //显示透明蒙层，防止触摸穿透,
            success: res => {}
          });
          console.log(error);
        });
    });
  }
  getRequestData() {
    var jsonArray = [];
    for (var i = 0; i < this.$parent.globalData.userAnswer.length; i++) {
      jsonArray.push({
        question: this.$parent.globalData.userAnswer[i].question,
        answer: {
          answerIndex: this.$parent.globalData.userAnswer[i].index,
          answer: this.$parent.globalData.userAnswer[i].answer
        }
      });
    }
    return {
      answer: JSON.stringify(jsonArray)
    };
  }
  rpx(param) {
    return Number((this.sysData.windowWidth / 750 * param).toFixed(2));
  }

  onShareAppMessage(res) {
    if (res.from === 'button') {
      // 来自页面内转发按钮
      console.log(res.target);
    }
    return {
      title: '图靡小程序',
      path: '/pages/index'
    };
  }
}
</script>
